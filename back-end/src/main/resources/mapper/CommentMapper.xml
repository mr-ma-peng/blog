<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blog.mapper.CommentMapper">

    <resultMap type="com.example.blog.entity.Comment" id="CommentMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="articleId" column="article_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="likeCount" column="like_count" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into blog.comment(parent_id, article_id, user_id, content, like_count, create_time, create_by, update_time, update_by)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.parentId}, #{entity.articleId}, #{entity.userId}, #{entity.content}, #{entity.likeCount}, #{entity.createTime}, #{entity.createBy}, #{entity.updateTime}, #{entity.updateBy})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into blog.comment(parent_id, article_id, user_id, content, like_count, create_time, create_by, update_time, update_by)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.parentId}, #{entity.articleId}, #{entity.userId}, #{entity.content}, #{entity.likeCount}, #{entity.createTime}, #{entity.createBy}, #{entity.updateTime}, #{entity.updateBy})
        </foreach>
        on duplicate key update
         parent_id = values(parent_id) , article_id = values(article_id) , user_id = values(user_id) , content = values(content) , like_count = values(like_count) , create_time = values(create_time) , create_by = values(create_by) , update_time = values(update_time) , update_by = values(update_by)     </insert>

</mapper>

